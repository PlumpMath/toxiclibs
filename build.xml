<?xml version="1.0" encoding="UTF-8"?>
<project name="toxiclibs" default="release">
	<!-- This needs to change with every release -->
	<property name="toxiclibs.version" value="0005" />
	<property name="toxiclibs.jdk.level" value="5" />
	<property name="toxiclibs.zip.comment" value="toxiclibs - assorted classes for Java &amp; Processing v${toxiclibs.version}" />
	<property name="toxiclibs.libs" value="lib" />
	<property name="toxiclibs.jar.filename" value="toxiclibs.jar" />

	<!-- Basic targets -->
	<target name="init">
		<property name="src.dir" value="src" />
		<property name="build.dir" value="bin" />
		<property name="release.dir" value="dist" />
		<!-- build folder contains temporary files needed to create release level files -->
		<property name="build.classes.dir" value="${build.dir}" />
		<property name="build.manifest" value="${build.dir}/toxiclibs.mf" />
		<property name="build.jar" value="${build.dir}/toxiclibs.jar" />
		<!-- release folder contains files which may be distributed in some way or another -->
		<property name="release.javadoc.dir" value="docs" />
		<property name="release.src.zip" value="${release.dir}/toxiclibs-${toxiclibs.version}-src.zip" />
		<property name="release.bin.zip" value="${release.dir}/toxiclibs-${toxiclibs.version}.zip" />
		<property name="release.examples.dir" value="examples"/>
	</target>

	<target name="clean" depends="init" description="Remove build files created this scripts">
		<delete dir="${build.dir}" />
		<delete dir="${release.dir}" />
	</target>


	<!-- build directory targets -->
	<target name="compile" depends="init" description="Compile source">
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" source="${toxiclibs.jdk.level}" target="${toxiclibs.jdk.level}" classpath="${toxiclibs.libs}">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<target name="create_manifest" description="Create the jar manifest">
		<echo file="${build.manifest}" append="false" message="Manifest-Version: 1.0${line.separator}" />
	</target>

	<target name="jars" depends="create_manifest" description="Create jar files required for execution">
		<mkdir dir="${release.dir}" />
		<jar jarfile="${release.dir}/${toxiclibs.jar.filename}" manifest="${build.manifest}">
			<fileset dir="${build.classes.dir}" />
		</jar>
		<!-- <copy todir="${release.dir}" file="${sunflow.libs}" />  -->
	</target>

	<!-- release directory targets -->
	<target name="zips" depends="jars" description="Create release zip files">
		<mkdir dir="${release.dir}" />
		<zip destfile="${release.bin.zip}" comment="${toxiclibs.zip.comment} - Binary release">
			<zipfileset dir="${release.dir}" includes="*.jar" prefix="toxiclibs/library" />
			<zipfileset dir="." includes="CHANGELOG" prefix="toxiclibs" />
			<zipfileset dir="." includes="LICENSE" prefix="toxiclibs" />
			<zipfileset dir="." includes="README" prefix="toxiclibs" />
			<zipfileset dir="${release.javadoc.dir}" prefix="toxiclibs/docs" />
			<zipfileset dir="${release.examples.dir}" prefix="toxiclibs/examples" />
		</zip>
		<zip destfile="${release.src.zip}" comment="${toxiclibs.zip.comment} - Source code release">
			<zipfileset dir="${src.dir}" prefix="toxiclibs/src" />
			<zipfileset dir="${toxiclibs.libs}" prefix="toxiclibs/lib" />
			<zipfileset dir="${release.examples.dir}" prefix="toxiclibs/examples" />
			<zipfileset dir="." includes="build.xml" prefix="toxiclibs" />
			<zipfileset dir="." includes="LICENSE" prefix="toxiclibs" />
			<zipfileset dir="." includes="README" prefix="toxiclibs" />
		</zip>
	</target>

	<target name="javadoc" depends="init" description="Generate documentation">
		<mkdir dir="${release.javadoc.dir}" />
		<javadoc classpath="${toxiclibs.libs}" destdir="${release.javadoc.dir}" access="protected" use="true" notree="false" nonavbar="false" noindex="false" splitindex="true" author="true" version="true" nodeprecatedlist="false" nodeprecated="false" sourcepath="${src.dir}" doctitle="toxiclibs v${toxiclibs.version}">
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="**" />
			</packageset>
		</javadoc>
	</target>

	<target name="release" depends="init, javadoc, zips" />

</project>